import ssl
import socket
import hashlib

def get_certificate_fingerprint(hostname, port=443):
    try:
        context = ssl.create_default_context()
        with socket.create_connection((hostname, port)) as sock:
            with context.wrap_socket(sock, server_hostname=hostname) as ssock:
                cert = ssock.getpeercert(binary_form=True)
                if not cert:
                    print("Certificate is missing or invalid.")
                    return
                fingerprint = hashlib.sha256(cert).hexdigest()
                print(f"Certificate public key hash (SHA-256): {fingerprint}")
    except ssl.SSLError as e:
        print(f"SSL error: {e}")
    except socket.error as e:
        print(f"Connection error: {e}")
if __name__ == "__main__":
    hostname = input("Enter domain name (e.g., example.com): ")
    get_certificate_fingerprint(hostname)
